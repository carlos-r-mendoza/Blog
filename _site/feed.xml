<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carlos Codes Blog</title>
    <description>Carlos R. Mendoza Blog, Software Developer, Software Engineer, Full Stack Developer, Web Developer, JavaScript, AngularJS, Node.js, MongoDB, Android App Development, Technology, Learning, Teaching, Creating.</description>
    <link>http://carlos-r-mendoza.github.io/</link>
    <atom:link href="http://carlos-r-mendoza.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 07 Aug 2015 15:13:02 -0400</pubDate>
    <lastBuildDate>Fri, 07 Aug 2015 15:13:02 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>What is Model-View-Controller (MVC)?</title>
        <description>&lt;h1 id=&quot;separation-of-concerns&quot;&gt;Separation of Concerns&lt;/h1&gt;
&lt;p&gt;Developing software applications is a complex matter. To cope with this complexity, it is important to implement &lt;em&gt;separation of concerns&lt;/em&gt; when developing software. In computer science, &lt;em&gt;separation of concerns&lt;/em&gt; is a key design and architecture principle for dividing a computer program into defined sections - each addressing a specific aspect of your program’s functionality. The goal is to break down a program’s code base into distinct sections that overlap in responsibility as little as possible as this will help make your code easier to reuse, maintain, debug, and test.&lt;/p&gt;

&lt;h1 id=&quot;model-view-controller-mvc&quot;&gt;Model-View-Controller (MVC)&lt;/h1&gt;
&lt;p&gt;The Model-View-Controller (MVC) software architectural pattern is an excellent example of &lt;em&gt;separation of concerns&lt;/em&gt;. MVC calls for an application to be divided into three distinct but interconnected sections - you might have guessed it - the &lt;em&gt;&lt;strong&gt;M&lt;/strong&gt;odel&lt;/em&gt;, the &lt;em&gt;&lt;strong&gt;V&lt;/strong&gt;iew&lt;/em&gt;, and the &lt;em&gt;&lt;strong&gt;C&lt;/strong&gt;ontroller&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;MVC was introduced in 1979 by Trygve Reenskaug, who maintains a webpage that explains MVC from his perspective (&lt;a href=&quot;http://heim.ifi.uio.no/~trygver/themes/mvc/mvc-index.html&quot;&gt;here&lt;/a&gt;). MVC became widely implemented starting in the 1980s and is today one of the most utilized models of &lt;em&gt;separation of concerns&lt;/em&gt;. If you are a software developer, it is likely that you have used a framework that follows MVC conventions.&lt;/p&gt;

&lt;h1 id=&quot;the-model&quot;&gt;The &lt;strong&gt;M&lt;/strong&gt;odel&lt;/h1&gt;

&lt;p&gt;Think data and the logic responsible for managing the data. The Model is responsible for responding to requests for and modifying information. The Model is independent of the user interface and often provides an API so that other parts of the programs can access it. In MVC, the Model responds to instructions received from the Controller. The goals is to make the Model reusable, regardless of any changes to the user interface.&lt;/p&gt;

&lt;h1 id=&quot;the-view&quot;&gt;The &lt;strong&gt;V&lt;/strong&gt;iew&lt;/h1&gt;

&lt;p&gt;The View is a visual representation of the Model. It is the presentation layer, the user interface. The View renders the information received from the Controller, which communicates with the Model. When there is user input, the View sends commands to the Controller to request or modify information on the Model.&lt;/p&gt;

&lt;h1 id=&quot;the-controller&quot;&gt;The &lt;strong&gt;C&lt;/strong&gt;ontroller&lt;/h1&gt;

&lt;p&gt;The Controller contains the necessary logic to connect the Model and the View. Think of it as the messenger between the Model and the View. It contains the logic necessary to make information received from the Model presentable in the View. On the other hand, when there is user input on the View, the Controller sends commands to the Model to retrieve or modify information.&lt;/p&gt;

&lt;h1 id=&quot;so-how-does-mvc-work&quot;&gt;So, How Does MVC Work?&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p id=&quot;MVC&quot;&gt;Model &amp;lt;-----&amp;gt; Controller &amp;lt;-----&amp;gt; View&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The simple diagram above displays of how I like to think of MVC. The Model and the View never directly talk to one another and communication between these two is handled by the Controller.&lt;/p&gt;

&lt;p&gt;In this case, the Model and View run in isolated environments, completely independent of one another. The Controller is tightly aligned with the View, containing the logic to interpret user input on the View and to retrieve and handle information from the Model so that the View can be appropriately rendered.&lt;/p&gt;

&lt;p&gt;Keep in mind that MVC is only a paradigm for architecting the structure of a program to cope with the complexity of creating and maintaining software. It is up to the developer or team of developers to decide how the concept of MVC will be implemented.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Aug 2015 10:45:00 -0400</pubDate>
        <link>http://carlos-r-mendoza.github.io/what-is-mvc</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/what-is-mvc</guid>
        
        
        <category>model-view-controller</category>
        
        <category>mvc</category>
        
      </item>
    
      <item>
        <title>HTTP Status Codes</title>
        <description>&lt;p&gt;HTTP is the protocol for transferring files across the World Wide Web, outlining how information is formatted and transmitted and the actions that browsers and web servers should take in response to certain actions.&lt;/p&gt;

&lt;p&gt;Below are some of the most common Hypertext Transfer Protocol (HTTP) response status codes, which are responses provided by the web server and are often helpful when trying to identify the reason behind a problem.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;200 OK&lt;/strong&gt; - This is the standard response for a successful HTTP request.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;201 Created&lt;/strong&gt; - The request has executed, resulting in a new resource being created. This is often associated with POST requests.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;301 Moved Permanently&lt;/strong&gt; - The content requested has been moved and the current and any future requests should be directed to the URI provided.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;400 Bad Request&lt;/strong&gt; - The server is not able to or will not process the request due to an error perceived to be on the client side.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;401 Unauthorized&lt;/strong&gt; - Authentication is required and has failed or has yet to be provided.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;403 Forbidden&lt;/strong&gt; - The web server is configured to deny access to the resource requested by the client.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;404 Not Found&lt;/strong&gt; - The client successfully communicated with the web server but the resource requested was not found.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;500 Internal Server Error&lt;/strong&gt; - Generic error message when an unexpected condition is encountered and a more specific message is not suitable.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;503 Service Unavailable &lt;/strong&gt;- Currently the server is unavailable due to heavy traffic or down for maintenance. This is commonly a temporary state.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 17 Apr 2015 07:12:25 -0400</pubDate>
        <link>http://carlos-r-mendoza.github.io/http-status-codes</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/http-status-codes</guid>
        
        
        <category>tool</category>
        
      </item>
    
      <item>
        <title>Great Tool to Quickly Write and Test Code - repl.it</title>
        <description>&lt;p&gt;When I quickly want to write and test code, I often use &lt;strong&gt;&lt;a title=&quot;repl.it&quot; href=&quot;http://repl.it/&quot; target=&quot;_blank&quot;&gt;repl.it&lt;/a&gt;&lt;/strong&gt;, which is an online environment where user input (code) is evaluated. This great tool allows code to be written and evaluated on one screen, where the left-hand side is designated for code input and the right-hand side returns the results of the code. It supports JavaScript, Python, Ruby, Java, and many more programming languages!&lt;/p&gt;

&lt;p&gt;This tool saves me a lot of time, since I don’t have to open a text editor or &lt;a title=&quot;Integrated Development Environment&quot; href=&quot;http://en.wikipedia.org/wiki/Integrated_development_environment&quot; target=&quot;_blank&quot;&gt;IDE&lt;/a&gt; every time I want to write, test, and explore certain code blocks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/great-tool-to-quickly-write-and-test-code-replit/replit-editor.png&quot;&gt;&lt;img class=&quot;size-full wp-image-116&quot; src=&quot;../img/great-tool-to-quickly-write-and-test-code-replit/replit-editor.png&quot; alt=&quot;repl.it Editor&quot; width=&quot;730&quot; height=&quot;411&quot; /&gt;&lt;/a&gt; repl.it Editor&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/great-tool-to-quickly-write-and-test-code-replit/replit-main-page.png&quot;&gt;&lt;img class=&quot;size-full wp-image-117&quot; src=&quot;../img/great-tool-to-quickly-write-and-test-code-replit/replit-main-page.png&quot; alt=&quot;repl.it Main Page&quot; width=&quot;730&quot; height=&quot;411&quot; /&gt;&lt;/a&gt; repl.it Main Page&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <pubDate>Mon, 09 Mar 2015 07:12:25 -0400</pubDate>
        <link>http://carlos-r-mendoza.github.io/great-tool-to-quickly-write-and-test-code-replit</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/great-tool-to-quickly-write-and-test-code-replit</guid>
        
        
        <category>tool</category>
        
      </item>
    
      <item>
        <title>Android Studio: App With No Title Bar</title>
        <description>&lt;p&gt;Removing the title bar in Android Studio from an app is relatively simple.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You can preview different Android themes by clicking on the &lt;strong&gt;AppTheme button&lt;/strong&gt; in Design view when looking at layouts.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/apptheme-button.png&quot;&gt;&lt;img class=&quot;wp-image-103 size-full&quot; src=&quot;../img/android-studio-app-with-no-title-bar/apptheme-button.png&quot; alt=&quot;Click on AppThemeButton&quot; width=&quot;720&quot; height=&quot;720&quot; /&gt;&lt;/a&gt; Click on AppThemeButton&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click on the &lt;strong&gt;AppTheme button&lt;/strong&gt;, go to &lt;strong&gt;All&lt;/strong&gt;, choose &lt;strong&gt;NoTitleBar&lt;/strong&gt;, and click &lt;strong&gt;OK&lt;/strong&gt;. This provides you with a preview of what you app will look like without a title bar.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/select-theme-no-title-bar.jpg&quot;&gt;&lt;img class=&quot;wp-image-105 size-full&quot; src=&quot;../img/android-studio-app-with-no-title-bar/select-theme-no-title-bar.jpg&quot; alt=&quot;Select &#39;No Title Bar&#39; Theme&quot; width=&quot;720&quot; height=&quot;720&quot; /&gt;&lt;/a&gt; Select ‘No Title Bar’ Theme&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/preview-no-title-bar.png&quot;&gt;&lt;img class=&quot;size-full wp-image-110&quot; src=&quot;../img/android-studio-app-with-no-title-bar/preview-no-title-bar.png&quot; alt=&quot;Preview of App With No Title Bar&quot; width=&quot;720&quot; height=&quot;720&quot; /&gt;&lt;/a&gt; Preview of App With No Title Bar&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You can also preview your app in devices using different screen sizes, including tablets, by clicking on the &lt;strong&gt;phone icon&lt;/strong&gt; and choosing the &lt;strong&gt;Preview All Screen Sizes&lt;/strong&gt; options in Design view when looking at layouts. To preview the look of your app in landscape or portrait orientation, click on the &lt;strong&gt;orientation icon&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/preview-all-screen-sizes.png&quot;&gt;&lt;img class=&quot;wp-image-101 size-large&quot; src=&quot;../img/android-studio-app-with-no-title-bar/preview-all-screen-sizes.png&quot; alt=&quot;Click on Phone Icon and Choose Preview All Screen Sizes&quot; width=&quot;730&quot; height=&quot;521&quot; /&gt;&lt;/a&gt; Click on Phone Icon and Choose Preview All Screen Sizes&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/preview-change-orientation.png&quot;&gt;&lt;img class=&quot;wp-image-100 size-full&quot; src=&quot;../img/android-studio-app-with-no-title-bar/preview-change-orientation.png&quot; alt=&quot;Preview Your App in Landscape or Portrait Orientation&quot; width=&quot;720&quot; height=&quot;720&quot; /&gt;&lt;/a&gt; Preview Your App in Landscape or Portrait Orientation&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Keep in mind that changing the theme using the &lt;strong&gt;AppTheme button only provides a preview&lt;/strong&gt;. &lt;strong&gt;You must change the theme inside the styles.xml file&lt;/strong&gt; to make the change permanent (&lt;strong&gt;res&lt;/strong&gt; folder -&amp;gt; &lt;strong&gt;values&lt;/strong&gt; folder -&amp;gt; &lt;strong&gt;styles.xml&lt;/strong&gt; file).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;styles.xml&lt;/strong&gt; file, change the theme to one with no title bar (add a period to the end of the theme name and you should see a pop up with various theme options; choose the &lt;strong&gt;.NoActionBar&lt;/strong&gt; theme).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;../img/android-studio-app-with-no-title-bar/change-theme-sytlesxml-file.jpg&quot;&gt;&lt;img class=&quot;wp-image-108 size-large&quot; src=&quot;../img/android-studio-app-with-no-title-bar/change-theme-sytlesxml-file.jpg&quot; alt=&quot;Change Theme in the styles.xml file&quot; width=&quot;730&quot; height=&quot;535&quot; /&gt;&lt;/a&gt; Change Theme in the styles.xml file&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go back to the Design view. Your app should no longer have a title bar!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep in mind that if you are using a newer version of Android Studio, that you should also change the theme in other styles.xml files that support newer versions of Android (e.g. when creating apps that support Google’s new material design, you will notice that there is a folder titled &lt;strong&gt;values-v21&lt;/strong&gt;; also change the theme in the&lt;strong&gt; styles.xml&lt;/strong&gt; file found inside that folder).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Nov 2014 06:12:25 -0500</pubDate>
        <link>http://carlos-r-mendoza.github.io/android-studio-app-with-no-title-bar</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/android-studio-app-with-no-title-bar</guid>
        
        
        <category>android</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>Publishing an Android App on the Play Store</title>
        <description>&lt;p&gt;&lt;a href=&quot;../img/publishing-an-android-app-on-the-play-store/play-store-publishing-console.png&quot;&gt;&lt;img class=&quot;size-large wp-image-85&quot; src=&quot;../img/publishing-an-android-app-on-the-play-store/play-store-publishing-console.png&quot; alt=&quot;Publishing an App on the Play Store&quot; width=&quot;660&quot; height=&quot;357&quot; /&gt;&lt;/a&gt; Publishing an App on the Play Store&lt;/p&gt;

&lt;p&gt;I recently published my first Android App on Google’s Play store, which you can find for free &lt;a title=&quot;Amusing Facts Android App&quot; href=&quot;https://play.google.com/store/apps/details?id=carlosrmendoza.com.amusingfacts&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Below I’ve listed the steps I took to publish the app. Keep in mind that these steps are for publishing a &lt;strong&gt;free app&lt;/strong&gt; on the Play store. You can find out information on monetizing your app &lt;a title=&quot;Monetize Android App Information Link&quot; href=&quot;http://developer.android.com/distribute/monetize/index.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;Steps to Publishing an Android App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/publishing-an-android-app-on-the-play-store/android-studio-runproguard-true.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-87&quot; src=&quot;../img/publishing-an-android-app-on-the-play-store/android-studio-runproguard-true.png&quot; alt=&quot;Progard Tool&quot; width=&quot;300&quot; height=&quot;146&quot; /&gt;&lt;/a&gt; Make runProguard ‘true’&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../img/publishing-an-android-app-on-the-play-store/android-studio-proguard-rules-pro-file.png&quot;&gt;&lt;img class=&quot;wp-image-88 size-medium&quot; src=&quot;../img/publishing-an-android-app-on-the-play-store/android-studio-proguard-rules-pro-file.png&quot; alt=&quot;proguard-rules.pro file&quot; width=&quot;300&quot; height=&quot;114&quot; /&gt;&lt;/a&gt; proguard-rules.pro file&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;In Android Studio deactivate logging and disable the debugging option before you build your application for release&lt;/strong&gt; (more information: &lt;a title=&quot;Deactivate logging and disable debugging &quot; href=&quot;http://developer.android.com/tools/publishing/preparing.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/tools/publishing/preparing.html&lt;/a&gt;)
&lt;ul&gt;
	&lt;li&gt;Use Proguard tool -&amp;gt; go to build.gradle -&amp;gt; make runProguard ‘true’ -&amp;gt; rename getDefaultProguardFile to ‘proguard-android-optimize.txt’&lt;/li&gt;
	&lt;li&gt;In the proguard-rules.pro file, copy and paste the following:-assumenosideeffects class android.util.Log {
public static boolean isLoggable(java.lang.String, int);
public static int v(...);
public static int i(...);
public static int w(...);
public static int d(...);
public static int e(...);
}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Building a Release Ready APK&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;In Android Studio, go to Build -&amp;gt; Generate Signed APK -&amp;gt; ‘Create new…’ Key store path (keep in mind that this will be the same to publish all subsequent apps under the same account, so make sure to store the key) -&amp;gt; choose ‘release’ type apk&lt;/li&gt;
	&lt;li&gt;This will create a release ready apk to upload to the Play store&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Google Play Developer Console &lt;/strong&gt;(&lt;a href=&quot;https://play.google.com/apps/publish&quot;&gt;https://play.google.com/apps/publish&lt;/a&gt;)
&lt;ul&gt;
	&lt;li&gt;Create account – it is $25 to create a publisher account (I believe this is a one time fee)&lt;/li&gt;
	&lt;li&gt;Complete your account information&lt;/li&gt;
	&lt;li&gt;Click on ‘+ Add new application’ button&lt;/li&gt;
	&lt;li&gt;Click on ‘Upload APK to production’ button&lt;/li&gt;
	&lt;li&gt;Complete the Store Listing (Icons)&lt;/li&gt;
	&lt;li&gt;Click on the ‘Ready to Publish’ button&lt;/li&gt;
	&lt;li&gt;Wait for about an hour, and your app should be on the Play store!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Useful Resources&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Info for distributing app - &lt;a title=&quot;Distributing App&quot; href=&quot;http://developer.android.com/distribute/index.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/distribute/index.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Launch Checklist - &lt;a title=&quot;Launch Checklist&quot; href=&quot;http://developer.android.com/distribute/tools/launch-checklist.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/distribute/tools/launch-checklist.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Preparing App for Release - &lt;a title=&quot;Preparing App for Release&quot; href=&quot;http://developer.android.com/tools/publishing/preparing.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/tools/publishing/preparing.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;App Iconography - &lt;a title=&quot;App Iconography&quot; href=&quot;http://developer.android.com/design/style/iconography.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/design/style/iconography.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 15 Nov 2014 06:12:25 -0500</pubDate>
        <link>http://carlos-r-mendoza.github.io/publishing-an-android-app-on-the-play-store</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/publishing-an-android-app-on-the-play-store</guid>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>How to Add a Browser Tab Icon to Your Website</title>
        <description>&lt;p&gt;&lt;a href=&quot;../img/how-to-add-a-browser-tab-icon-to-your-website/browser-tab-icon.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-40&quot; src=&quot;../img/how-to-add-a-browser-tab-icon-to-your-website/browser-tab-icon.png?w=300&quot; alt=&quot;Browser Tab Icon Example&quot; width=&quot;300&quot; height=&quot;36&quot; /&gt;&lt;/a&gt; Browser Tab Icon Example&lt;/p&gt;

&lt;p&gt;The little tab browser icons that you have probably noticed while surfing the web are known as &lt;a title=&quot;favicons&quot; href=&quot;http://en.wikipedia.org/wiki/Favicon&quot; target=&quot;_blank&quot;&gt;favicons&lt;/a&gt; and not only appear on the browser tab, but also next to a site’s name on bookmark lists and desktop shortcuts.&lt;/p&gt;

&lt;p&gt;How do you add a tab browser icon to your html page?&lt;/p&gt;

&lt;p&gt;Keep in mind that a favicon needs to be &lt;strong&gt;16x16 pixels&lt;/strong&gt; in size and a &lt;strong&gt;.ico file&lt;/strong&gt;. Luckily, there are online tools that allow you to resize and convert your image to a .ico file all at once! For my &lt;a title=&quot;Portfolio Site&quot; href=&quot;http://carlosrmendoza.com&quot; target=&quot;_blank&quot;&gt;portfolio site&lt;/a&gt;, I used &lt;a title=&quot;convert image file to .ico format&quot; href=&quot;http://image.online-convert.com/convert-to-ico&quot; target=&quot;_blank&quot;&gt;online-convert.com&lt;/a&gt; to convert my .png image file to a 16X16 pixels .ico file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to Add a Browser Tab Icon to Your HTML Page&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Create the icon that you wish to display on the tab browser.
&lt;ul&gt;
	&lt;li&gt;Do not worry too much about image size and go ahead and save the file as a .png or .jpg file. You can later use an online converter to resize and to change the file format of your image.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Go to &lt;a title=&quot;convert image file to .ico format&quot; href=&quot;http://image.online-convert.com/convert-to-ico&quot; target=&quot;_blank&quot;&gt;online-convert.com&lt;/a&gt;, convert your image to a .ico file, and resize your image to 16X16 pixels.

&lt;a href=&quot;http://image.online-convert.com/convert-to-ico&quot;&gt;&lt;img class=&quot;wp-image-48 size-large&quot; src=&quot;../img/how-to-add-a-browser-tab-icon-to-your-website/convert-to-ico.png&quot; alt=&quot;Resizing your image and saving it as a .ico file.&quot; width=&quot;660&quot; height=&quot;434&quot; /&gt;&lt;/a&gt; Resizing your image and saving it as a .ico file.&lt;/li&gt;
	&lt;li&gt;Save your icon image inside the img file in your website&#39;s directory.&lt;/li&gt;
	&lt;li&gt;Within the &amp;lt;head&amp;gt; tag of your html file insert the following &amp;lt;link&amp;gt; tag:
&lt;ul&gt;
	&lt;li&gt;&amp;lt;link rel=&quot;shortcut icon&quot; href=&quot;img/nameofyouriconfile.ico&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;Keep in mind that href should point exactly to where your image is located within your website&#39;s directory in relation to the html document.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Save everything, make sure to upload files to your host if your site is live, and refresh the browser. You should now have a tab browser icon displaying for your html file!&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 12 Nov 2014 06:12:25 -0500</pubDate>
        <link>http://carlos-r-mendoza.github.io/how-to-add-a-browser-tab-icon-to-your-website</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/how-to-add-a-browser-tab-icon-to-your-website</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Hello World!</title>
        <description>&lt;p&gt;A new journey begins…&lt;/p&gt;

&lt;p&gt;Technology has always captivated me. As a young kid, I used to take apart electronic toys and with a pair of wires would connect the toy’s motor to a D battery to get it running. I created a couple of interesting makeshift toys this way. I’ve always had this intrinsic curiosity to find out how things actually work and have never been satisfied with knowing that something “just works” - I need to know &lt;strong&gt;why it works&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At the onset of my teenage years there was a particular technology that started grabbing my attention more than the others – software! As a 13-year-old, I remember begging my mom to buy me a book on HTML until she finally gave in and bought it for my birthday. Soon after, I started building a personal website on Geocities that was eerily similar to what we would now consider a social media profile page and another website using Angelfire for a club at school in which I participated. Around this time, I also started experimenting with Microsoft FrontPage and Dreamweaver.&lt;/p&gt;

&lt;p&gt;Making a positive impact, or at least trying to, has always been important to me. When I entered &lt;a title=&quot;Cornell University&quot; href=&quot;http://cornell.edu&quot; target=&quot;_blank&quot;&gt;Cornell University&lt;/a&gt;, I was torn between studying Economics or Computer Science. However, shortly after beginning my freshman year, I decided to major in Economics because I believed that it would allow me to better understand why inequality exists. At the time, I felt that Economics was a better fit for the type of impact that I wanted to make with my life; therefore, I pursued the subject with the intentions of learning how economies worked with the hopes of gaining insight into ways of eradicating poverty.&lt;/p&gt;

&lt;p&gt;After my freshman and sophomore years, I participated in an internship with &lt;a title=&quot;Breakthrough Collaborative&quot; href=&quot;http://www.breakthroughcollaborative.org/&quot; target=&quot;_blank&quot;&gt;Breakthrough Collaborative&lt;/a&gt; in the Bay Area that had me teaching middle school students math (pre-Algebra and Algebra 1). This experience, combined with my experience of growing up in under-resourced communities, made me realize that I wanted to be on the ground making a positive contribution. Consequently over the past few years, after graduating college, I have been doing just the type of work that I intended – working in low-income communities running educational programs for young people – with &lt;a title=&quot;City Year&quot; href=&quot;http://cityyear.org&quot; target=&quot;_blank&quot;&gt;City Year&lt;/a&gt; and subsequently &lt;a title=&quot;NFTE&quot; href=&quot;http://nfte.com&quot; target=&quot;_blank&quot;&gt;NFTE&lt;/a&gt;. I feel fortunate that I have been able to do this kind of work with great organizations working alongside some incredible people. However, I knew that one-day would come when I would decide to take a different approach to making a positive impact. That day is here.&lt;/p&gt;

&lt;p&gt;As time has elapsed, my interest in software development has crept back in as I’ve come to the realization that technology can be a powerful conduit to making large-scale impact. Software reaches the globe. That is extremely powerful. A few months back, I started teaching myself how to code in my spare time using many of the resources that can be found online. I’ve enjoyed what I’ve learned up to this point so much that it has left me no doubt that I need to “go big or go home.” And “go big” I am. Over the past few weeks I’ve been transitioning out of my current organization so that I can fully commit all of my time to becoming a software developer. I aspire to build software platforms that will make people’s lives better. Even if it’s just a tiny bit better.&lt;/p&gt;

&lt;p&gt;Which leads me to today. I am now officially a full-time student. This might seems like a sudden decision. But trust me, it is not. I’ve been thinking of pursuing this passion of mine for a while now and have been planning for this very moment for a few months. Currently, I am enrolled in certificate courses for Android App Development and Web Development at &lt;a title=&quot;NYU&quot; href=&quot;http://nyu.edu&quot; target=&quot;_blank&quot;&gt;NYU&lt;/a&gt;. Thank you &lt;a title=&quot;Segal AmeriCorps Education Award&quot; href=&quot;http://www.nationalservice.gov/programs/americorps/segal-americorps-education-award&quot; target=&quot;_blank&quot;&gt;AmeriCorps&lt;/a&gt;! I am also using a ton of online resources to teach myself. My goal is to be employed as a software developer in 6-9 months. That is how long I am giving myself. Making this career shift, which in the surface can appear drastic, might seem risky. Have no doubt. &lt;strong&gt;I am going to work for this like there is no tomorrow!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over the next few months I will be documenting my experience of becoming a software developer by posting here some of the cool stuff that I am learning. Hopefully this documentation will give rise to content that some will find informative.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Nov 2014 07:12:25 -0400</pubDate>
        <link>http://carlos-r-mendoza.github.io/hello-world</link>
        <guid isPermaLink="true">http://carlos-r-mendoza.github.io/hello-world</guid>
        
        
        <category>journal</category>
        
      </item>
    
  </channel>
</rss>
